import dynamic from "next/dynamic";
import Footer from "@/components/Footer";
import IPCard from "@/components/IPCard";
import Head from "next/head";
import { getDirection } from "@/lang/locale";
import { useState } from "react";
import IPContext, { IPContextType } from "@/store/IPContext";
import axios, { AxiosResponse } from "axios";
import styles from '@/styles/Main.module.scss';
import { GetServerSideProps, InferGetServerSidePropsType  } from "next";


export const getServerSideProps: GetServerSideProps<
  {[key: string]: any}
> = async () => {
  try {
    const response = await axios.get(`${process.env.BASE_URL}/api/json`);
    return {
      props: {
        data: response.data
      }
    }
  } catch (error) {
    return {
      notFound: true,
    }
  }
}

const Map = dynamic(
  () => {
    return import('@/components/Map');
  },
  { ssr: false }
);

export default function Home({ data }: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const [state, setState] = useState<IPContextType>(data);

  return (
    <IPContext.Provider value={state}>
      <Head>
        <title>JeoIP</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          rel="apple-touch-icon"
          sizes="180x180"
          href="/favicon/apple-touch-icon.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/favicon/favicon-32x32.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/favicon/favicon-16x16.png"
        />
        <link rel="manifest" href="/favicon/site.webmanifest" />
        <link
          rel="mask-icon"
          href="/favicon/safari-pinned-tab.svg"
          color="#5bbad5"
        />
        <link
          rel="stylesheet"
          href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
          integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
          crossOrigin=""
        />
        <meta name="msapplication-TileColor" content="#da532c" />
        <meta name="theme-color" content="#ffffff" />
      </Head>
      <main dir={getDirection()} className={(getDirection() === 'rtl') ? styles['main__rtl'] : styles.main}>
        <Map className="d-none d-sm-block" lat={state.latitude} lng={state.longitude} fixed/>
        <IPCard/>
      </main>
      <footer dir={getDirection()}>
        <Footer />
      </footer>
    </IPContext.Provider>
  );
}
